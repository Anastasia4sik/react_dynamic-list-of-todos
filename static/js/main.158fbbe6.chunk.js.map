{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelectedTodoId","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","query","filter","onReset","onSelectStatus","status","value","onChange","event","target","placeholder","style","pointerEvents","length","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","setSelectedTodoId","setQuery","setStatus","visibleTodos","useMemo","lowerTitle","toLowerCase","normalizedQuery","trim","isQueryMatch","includes","isStatus","selectTodoId","todoId","selectedTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.158fbbe6.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number,\n  onSelectedTodoId: (todoIf: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={\n            `has-background${\n              selectedTodoId === todo.id\n                ? '-info-light'\n                : ''\n            }`\n          }\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodoId(todo.id)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    { 'fa-eye': selectedTodoId !== todo.id },\n                    { 'fa-eye-slash': selectedTodoId === todo.id },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  filter: (value: string) => void,\n  onReset: () => void,\n  onSelectStatus: (value: string) => void,\n  status: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filter,\n  onReset,\n  onSelectStatus,\n  status,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={(event) => onSelectStatus(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => filter(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query.length > 0 && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onReset}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  const handleCloseButton = () => onModal();\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseButton}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`\"mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState('all');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const visibleTodos = useMemo(() => (\n    todos.filter(todo => {\n      const lowerTitle = todo.title.toLowerCase();\n      const normalizedQuery = query.toLowerCase().trim();\n\n      const isQueryMatch = lowerTitle.includes(normalizedQuery);\n      let isStatus = true;\n\n      switch (status) {\n        case 'active':\n          isStatus = !todo.completed;\n          break;\n\n        case 'completed':\n          isStatus = todo.completed;\n          break;\n\n        default:\n          isStatus = true;\n      }\n\n      return isQueryMatch && isStatus;\n    })\n  ), [todos, query, status]);\n\n  const selectTodoId = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  const selectedTodo = useMemo(() => (\n    visibleTodos.find(todo => (\n      todo.id === selectedTodoId\n    ))\n  ), [visibleTodos, selectTodoId]);\n\n  const closeSelectedTodo = () => {\n    setSelectedTodoId(0);\n  };\n\n  const filterByQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  const selectStatus = (value: string) => {\n    setStatus(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filter={filterByQuery}\n                onReset={clearQuery}\n                onSelectStatus={selectStatus}\n                status={status}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelectedTodoId={selectTodoId}\n                  />\n                )\n                : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          onModal={closeSelectedTodo}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}